<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="yaksok.mapper.YaksokMapper">

	<!-- 샘플 테스트 -->
	<select id="totalCount" resultType="int">
		select count(*) cnt from tab
	</select>
	
	<!-- yaksok_column -->
	<sql id="yaksok_column">
		yidx, yaksokname, indate, idx
	</sql>
	
	<!-- ================================================================================= -->
	
	<!-- 약속 등록 -->
	<insert id="insertYaksok" parameterType="yaksok.model.YaksokVO">
		insert into yaksok 
		(<include refid="yaksok_column"/>)
		values(yaksok_yidx_seq.nextval, #{yaksokname}, sysdate, #{idx})
	</insert>
	
	<!-- 약속 데이터 등록 -->
	<insert id="insertYaksokInfo" parameterType="yaksok.model.YaksokInfoVO">
		insert into yaksok_info
		values(yaksok_info_yidx_seq.nextval, #{yaksokurl}, #{locate}, 
		#{number1_1}, #{number1_2}, #{number1_3}, 
		#{number2_1}, #{number2_2}, #{number2_3}, 
		#{image1}, #{image2}, #{image3}, #{image4}, #{image5}, 
		#{content_main_title}, #{content_main}, 
		#{content1_title}, #{content1},
		#{content2_title}, #{content2}, 
		#{content3_title}, #{content3}, 
		#{templates})
	</insert>

	<!-- 아이디로 모든 약속 부르기 -->
	<select id="selectAllYaksok" resultType="yaksok.model.YaksokVO"
	parameterType="string">
		select 
		<include refid="yaksok_column"/>
		from yaksok where idx=#{idx} 
	</select>
	
	<!-- 키 값으로 해당 약속 정보 부르기 -->
	<select id="selectYaksokInfo" resultType="yaksok.model.YaksokInfoVO"
	parameterType="string">
		select * from yaksok_info where yidx=#{yidx}
	</select>
	
	<!-- 약속 정보 수정 -->
	<update id="updateYaksokInfo" parameterType="yaksok.model.YaksokInfoVO">
		update yaksok_info set yaksokurl=#{yaksokurl}, locate=#{locate}, 
		number1_1=#{number1_1}, number1_2=#{number1_2}, number1_3=#{number1_3},
		number2_1=#{number2_1}, number2_2=#{number2_2}, number2_3=#{number2_3},
		image1=#{image1}, image2=#{image2}, image3=#{image3}, image4=#{image4}, image5=#{image5},
		content_main_title=#{content_main_title}, content_main=#{content_main},
		content1_title=#{content1_title}, content1=#{content1},
		content2_title=#{content2_title}, content2=#{content2},
		content3_title=#{content3_title}, content3=#{content3},
		templates=#{templates} where yidx=#{yidx}
	</update>
	
	<!-- 약속 url로 약속 정보 부르기 -->
	<select id="selectYaksokInfoByURL" parameterType="yaksok.model.YaksokInfoVO"
	resultType="yaksok.model.YaksokInfoVO">
		select * from yaksok_info where yaksokurl=#{yaksokurl}
	</select>
	
	<!-- 약속 예약 정보 등록 -->
	<insert id="insertYaksokReserve" parameterType="yaksok.model.YaksokReserveVO" >
		insert into yaksok_reserve 
		values(yaksok_reserve_ridx_seq.nextval, #{rusername}, #{rhp}, #{rcontent}, #{rnumber}, 
		sysdate, #{rcheckedstate}, #{yidx})
	</insert>
	
	<!-- 약속 예약 정보 개수 가져오기 -->
	<select id="getYaksokReserveCount" resultType="int" parameterType="string">
		select count(*) cnt from yaksok_reserve where yidx=#{yidx}
	</select>
	
	<!-- 페이징 처리된 약속 예약 정보 리스트 부르기 -->
	<select id="selectAllYaksokReserve" resultType="yaksok.model.YaksokReserveVO"
	parameterType="hashmap">
		select * 
		from(
		select yaksok_reserve.*, row_number() over(order by yidx desc) yn
		from yaksok_reserve where yidx=#{yidx}
		) where
		yn between #{start} and #{end}
	</select>
	
</mapper>





